<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japin</title>
  <icon>https://blog.japinli.top/icon.png</icon>
  
  <link href="https://blog.japinli.top/atom.xml" rel="self"/>
  
  <link href="https://blog.japinli.top/"/>
  <updated>2020-09-01T13:45:48.571Z</updated>
  <id>https://blog.japinli.top/</id>
  
  <author>
    <name>Japin Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PostgreSQL 优化 setitimer 系统调用</title>
    <link href="https://blog.japinli.top/2020/08/postgresql-optimize-setitimer-system-calls/"/>
    <id>https://blog.japinli.top/2020/08/postgresql-optimize-setitimer-system-calls/</id>
    <published>2020-08-31T14:46:59.000Z</published>
    <updated>2020-09-01T13:45:48.571Z</updated>
    
    
    <summary type="html">&lt;p&gt;当我们在使用 PostgreSQL 数据库并启用 &lt;code&gt;statement_timeout&lt;/code&gt; 时，可以看到 &lt;code&gt;setitimer()&lt;/code&gt; 函数的调用次数明显偏多。本文分析了 &lt;a href=&quot;https://www.postgresql.org/message-id/CA%2BhUKG%2Bo6pbuHBJSGnud%3DTadsuXySWA7CCcPgCt2QE9F6_4iHQ%40mail.gmail.com&quot;&gt;Thomas Munro 给出的关于 &lt;code&gt;setitimer()&lt;/code&gt; 函数的优化&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
    <category term="源码分析" scheme="https://blog.japinli.top/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT (v8.x) 主题添加近期文章</title>
    <link href="https://blog.japinli.top/2020/08/next-8-0-0-recent-posts/"/>
    <id>https://blog.japinli.top/2020/08/next-8-0-0-recent-posts/</id>
    <published>2020-08-28T23:04:18.000Z</published>
    <updated>2020-08-28T23:26:29.479Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近将博客由 NexT-v5.x 迁移到 NexT-v8.x 版本，这其中有很多东西已将发生变化了。本文简要介绍一下如何在新版中加入近期文章的功能。NexT-v8.x 版本将模版文件由原来的 &lt;code&gt;swig&lt;/code&gt; 变更为 &lt;code&gt;njk&lt;/code&gt; 后缀，因此，之前的近期文章的功能不再适用，我们需要稍作修改。&lt;/p&gt;</summary>
    
    
    
    <category term="博客" scheme="https://blog.japinli.top/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://blog.japinli.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 13 - backtrace 功能预览</title>
    <link href="https://blog.japinli.top/2020/08/postgresql-backtrace/"/>
    <id>https://blog.japinli.top/2020/08/postgresql-backtrace/</id>
    <published>2020-08-15T12:30:43.000Z</published>
    <updated>2020-08-23T11:23:12.669Z</updated>
    
    
    <summary type="html">&lt;p&gt;目前在 Greenplum、MySQL 数据库中均支持 backtrace 功能，现在 PostgreSQL 13-devel 版本中也新增了这个功能，我们可以在服务器日志中记录堆栈信息。&lt;/p&gt;
&lt;img src=&quot;/2020/08/postgresql-backtrace/backtrace.png&quot; class=&quot;&quot; title=&quot;Backtrace 提交记录&quot;&gt;

&lt;p&gt;本文将对该功能进行简要介绍。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 共享表</title>
    <link href="https://blog.japinli.top/2020/08/postgresql-shared-relations/"/>
    <id>https://blog.japinli.top/2020/08/postgresql-shared-relations/</id>
    <published>2020-08-08T07:15:41.000Z</published>
    <updated>2020-08-23T11:25:24.501Z</updated>
    
    
    <summary type="html">&lt;p&gt;PostgreSQL 数据库中提供的某些系统表是 Cluster 级别共享的，他们在数据库内部被称为 &lt;code&gt;shared_relation&lt;/code&gt;，本文就介绍一下 PostgreSQL 是如何创建共享表的。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
    <category term="源码分析" scheme="https://blog.japinli.top/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 上创建 U 盘启动器</title>
    <link href="https://blog.japinli.top/2020/07/create-u-bootloader-on-macos/"/>
    <id>https://blog.japinli.top/2020/07/create-u-bootloader-on-macos/</id>
    <published>2020-07-26T09:04:51.000Z</published>
    <updated>2020-08-23T11:16:57.197Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文记载了如何在 MacOS 平台制作 U 盘安装镜像，这里主要使用到了 hdiutil，diskutil 和 dd 三个命令。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="MacOS" scheme="https://blog.japinli.top/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>小米路由器刷 Breed 和 Padavan 固件</title>
    <link href="https://blog.japinli.top/2020/07/miwifi-breed-padavan/"/>
    <id>https://blog.japinli.top/2020/07/miwifi-breed-padavan/</id>
    <published>2020-07-12T06:06:41.000Z</published>
    <updated>2020-08-23T11:22:20.793Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文主要记录一下小米路由器 3G 刷 breed 和 padavan 的过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/techref/bootloader/breed&quot;&gt;Breed&lt;/a&gt; 是嵌入式设备的引导和恢复环境的简称。&lt;/li&gt;
&lt;li&gt;Padavan 是由俄罗斯人基于华硕源码开发的针对 mtk 芯片的固件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我将整个过程分为分为 5 个步骤，更新 ROM、开启 SSH、备份路由器、刷 breed、刷 padavan。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="R3G" scheme="https://blog.japinli.top/tags/R3G/"/>
    
    <category term="breed" scheme="https://blog.japinli.top/tags/breed/"/>
    
    <category term="padavan" scheme="https://blog.japinli.top/tags/padavan/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 修改配置参数</title>
    <link href="https://blog.japinli.top/2020/06/postgresql-alter-system/"/>
    <id>https://blog.japinli.top/2020/06/postgresql-alter-system/</id>
    <published>2020-06-09T13:12:39.000Z</published>
    <updated>2020-08-23T11:22:54.908Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天在使用 &lt;code&gt;ALTER SYSTEM&lt;/code&gt; 来修改 PostgreSQL 参数时遇到无法启动数据库的问题。如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;postgres&amp;#x3D;# ALTER SYSTEM SET shared_preload_libraries TO &amp;#39;pg_buffercache,passwordcheck&amp;#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER SYSTEM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;postgres&amp;#x3D;# \q&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ pg_ctl restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;waiting for server to shut down.... done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server stopped&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;waiting for server to start....postgres: could not access directory &amp;quot;&amp;#x2F;Users&amp;#x2F;japinli&amp;#x2F;Codes&amp;#x2F;postgresql&amp;#x2F;pg&amp;#x2F;data&amp;quot;: No such file or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Run initdb or pg_basebackup to initialize a PostgreSQL data directory.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; stopped waiting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pg_ctl: could not start server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Examine the log output.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你是否也遇到了这样的问题呢？其实这都是由于我们先入为主的思想导致的，&lt;code&gt;ALTER SYSTEM&lt;/code&gt; 支持以逗号分割的列表，而这类参数的修改不需要使用引号。因此，正确的使用方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ALTER SYSTEM SET shared_preload_libraries TO pg_buffercache, passwordcheck;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 数据库系统标识符</title>
    <link href="https://blog.japinli.top/2020/06/postgresql-system-identifier/"/>
    <id>https://blog.japinli.top/2020/06/postgresql-system-identifier/</id>
    <published>2020-06-07T10:07:36.000Z</published>
    <updated>2020-08-23T11:26:18.171Z</updated>
    
    
    <summary type="html">&lt;p&gt;我们都知道 PostgreSQL 针对每个数据库集群实例，都会有一个唯一的标识符 - __system identifier__。那么这个标识符是如何生成的呢？本文将对其进行简要的分析。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 编辑查询缓冲区</title>
    <link href="https://blog.japinli.top/2020/05/postgresql-edit-query-buffer/"/>
    <id>https://blog.japinli.top/2020/05/postgresql-edit-query-buffer/</id>
    <published>2020-05-19T14:28:59.000Z</published>
    <updated>2020-08-23T11:24:31.152Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我们经常需要在 psql 中修改查询语句，例如，我们编辑了几行查询语句，然后需要修改之前的内容，我之前额做法就是 Ctrl-C 然后在重新输入。其实，我们可以不必这么复杂。我们可以使用 &lt;code&gt;\e&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>Go 语言软件包下载</title>
    <link href="https://blog.japinli.top/2020/05/download-go-package/"/>
    <id>https://blog.japinli.top/2020/05/download-go-package/</id>
    <published>2020-05-18T13:46:28.000Z</published>
    <updated>2020-08-23T11:18:21.147Z</updated>
    
    
    <summary type="html">&lt;p&gt;作为一个刚入门的 Go 小白来说，下载第三方包就成为了第一道坎 :( 。本文简要介绍一下如何下载 Go 软件包，尤其是 Google 系列的包。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.japinli.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Go" scheme="https://blog.japinli.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Seafile 与 OnlyOffice 在线预览 Office 文档</title>
    <link href="https://blog.japinli.top/2020/05/seafile-with-onlyoffice/"/>
    <id>https://blog.japinli.top/2020/05/seafile-with-onlyoffice/</id>
    <published>2020-05-16T02:42:38.000Z</published>
    <updated>2020-08-23T11:31:58.986Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近，在公司采用 Seafile 搭建了一个文件服务器，并结合 OnlyOffice 实现在线预览功能。本文简要记录一下这个过程中所遇到的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="Seafile" scheme="https://blog.japinli.top/tags/Seafile/"/>
    
  </entry>
  
  <entry>
    <title>GDB 命令</title>
    <link href="https://blog.japinli.top/2020/04/gdb-commands/"/>
    <id>https://blog.japinli.top/2020/04/gdb-commands/</id>
    <published>2020-04-07T14:09:34.000Z</published>
    <updated>2020-08-23T11:19:00.229Z</updated>
    
    
    <summary type="html">&lt;p&gt;在&lt;a href=&quot;/2020/01/getting-in-and-out-of-gdb/&quot; title=&quot;上一篇&quot;&gt;上一篇&lt;/a&gt;文章中，我们介绍了如何进入和退出 GDB，以及一些基本的配置，本文主要介绍 GDB 的命令语法、与命令相关的配置，如何对命令进行补全、有关命令的选项以及如何获取命令的帮助信息。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="gdb" scheme="https://blog.japinli.top/tags/gdb/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 大对象</title>
    <link href="https://blog.japinli.top/2020/04/postgresql-large-object/"/>
    <id>https://blog.japinli.top/2020/04/postgresql-large-object/</id>
    <published>2020-04-04T04:30:04.000Z</published>
    <updated>2020-08-23T11:24:48.496Z</updated>
    
    
    <summary type="html">&lt;p&gt;我们知道在 Oracle 数据库中，大对象有三种类型，分别是 CLOB，BLOB 和 BFILE。在 Oracle 数据库中大对象最大存储根据配置可以达到 8TB 到 128TB。然而在 PostgreSQL 数据库中并没有提供这三种数据类型。因此在进行迁移的时候，我们需要做类型的映射。在参考文献 [2] 中提到可以将 CLOB 和 BLOB 分别映射到 text 和 bytea 数据类型上。此外，PostgreSQL 的插件 pg_largeobject 也提供了一种大对象的支持。本文简要介绍这两种大对象的使用。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 笔记本盖住不挂机</title>
    <link href="https://blog.japinli.top/2020/03/ubuntu-lid-switch-action/"/>
    <id>https://blog.japinli.top/2020/03/ubuntu-lid-switch-action/</id>
    <published>2020-03-08T04:20:23.000Z</published>
    <updated>2020-08-23T11:33:04.742Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我有一台旧笔记本装有 Ubuntu 18.04 系统，希望把它当作一个服务器，这时我就需要在盖住笔记本时系统不休眠。&lt;/p&gt;
&lt;p&gt;Ubuntu 系统中提供了 Login Manager 来管理这些行为，它的配置文件为</summary>
        
      
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="Ubuntu" scheme="https://blog.japinli.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL HASH 索引拾遗</title>
    <link href="https://blog.japinli.top/2020/02/postgresql-hash-index/"/>
    <id>https://blog.japinli.top/2020/02/postgresql-hash-index/</id>
    <published>2020-02-20T14:21:40.000Z</published>
    <updated>2020-08-23T11:24:40.155Z</updated>
    
    
    <summary type="html">&lt;p&gt;PostgreSQL 的 HASH 索引在 9.6 和 10 版本中有所不同，主要的区别在于 HASH 索引在 9.6 及其之前的版本中不会记录在 WAL 日志中，然而在 10 及其之后的版本这个已经被修复了。&lt;/p&gt;
&lt;p&gt;例如，下面是在 PostgreSQL 9.6.17 中创建 HASH 索引。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;postgres&amp;#x3D;# CREATE INDEX id_hash_index ON hash_table USING hash(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WARNING:  hash indexes are not WAL-logged and their use is discouraged&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE INDEX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从警告中可以看到，PostgreSQL 已经给出了明确提示。然而在 PostgreSQL 12.2 中，创建 HASH 索引则没有上述提示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;postgres&amp;#x3D;# create index idx_hash_id on hash_table using hash(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE INDEX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 12 流复制配置</title>
    <link href="https://blog.japinli.top/2020/02/postgresql-stream-replication/"/>
    <id>https://blog.japinli.top/2020/02/postgresql-stream-replication/</id>
    <published>2020-02-19T13:44:42.000Z</published>
    <updated>2020-09-01T13:22:25.137Z</updated>
    
    
    <summary type="html">&lt;p&gt;PostgreSQL 12 的流复制与之前的版本有所不同，主要有以下几点区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PG12 将原有的属于 &lt;code&gt;recovery.conf&lt;/code&gt; 配置文件中配置项迁移到了 &lt;code&gt;postgresql.conf&lt;/code&gt; 文件中，在新系统中如果存在 &lt;code&gt;recovery.conf&lt;/code&gt; 文件，数据库将无法启动；&lt;/li&gt;
&lt;li&gt;文件 &lt;code&gt;recovery.signal&lt;/code&gt; 和 &lt;code&gt;standby.signal&lt;/code&gt; 用于切换数据库为非主（non-primary）模式；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trigger_file&lt;/code&gt; 被修改为 &lt;code&gt;promote_trigger_file&lt;/code&gt;，&lt;del&gt;并且只能在 &lt;code&gt;postgresql.conf&lt;/code&gt;&lt;/del&gt; 可在配置文件或服务器命令行进行配置；&lt;/li&gt;
&lt;li&gt;最后，&lt;code&gt;standby_mode&lt;/code&gt; 参数被移除了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细说明请&lt;a href=&quot;https://www.postgresql.org/docs/12/release-12.html&quot;&gt;移步官网&lt;/a&gt;。本文将在 Ubuntu 18.04 LTS 下搭建 PG12 的流复制系统。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://blog.japinli.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://blog.japinli.top/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>GDB 基本使用</title>
    <link href="https://blog.japinli.top/2020/01/getting-in-and-out-of-gdb/"/>
    <id>https://blog.japinli.top/2020/01/getting-in-and-out-of-gdb/</id>
    <published>2020-01-13T14:42:31.000Z</published>
    <updated>2020-08-23T11:19:30.483Z</updated>
    
    
    <summary type="html">&lt;p&gt;在工作中经常使用 GDB 来调试程序，但是一直都没有系统的进行学习过，为此，我打算对其进行一个系统的学习，学习的主要材料来自 GNU GDB 文档 &lt;a href=&quot;https://sourceware.org/gdb/current/onlinedocs/gdb/&quot;&gt;Debugging with GDB&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文主要包括如何运行以及退出 GDB，通常，我们使用 &lt;code&gt;gdb&lt;/code&gt; 即可进入 GDB，而 &lt;code&gt;quit&lt;/code&gt; 命令或者 &lt;code&gt;Ctrl-d&lt;/code&gt; 快捷键便可以退出 GDB。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="gdb" scheme="https://blog.japinli.top/tags/gdb/"/>
    
  </entry>
  
  <entry>
    <title>C 程序结构和范围</title>
    <link href="https://blog.japinli.top/2020/01/C-program-structure-and-scope/"/>
    <id>https://blog.japinli.top/2020/01/C-program-structure-and-scope/</id>
    <published>2020-01-09T14:51:27.000Z</published>
    <updated>2020-08-23T11:15:23.395Z</updated>
    
    
    <summary type="html">&lt;p&gt;在之前的几篇关于 C 语言的文章中，我们以及掌握了 C 语言的基本要素，本文主要介绍 C 语言的程序结构和范围。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.japinli.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C 语言" scheme="https://blog.japinli.top/tags/C-%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Git 撤销已经修改的文件</title>
    <link href="https://blog.japinli.top/2019/12/git-discard-changes/"/>
    <id>https://blog.japinli.top/2019/12/git-discard-changes/</id>
    <published>2019-12-16T14:28:51.000Z</published>
    <updated>2020-08-23T11:19:57.626Z</updated>
    
    
    <summary type="html">&lt;p&gt;Git 中可以通过 &lt;code&gt;git checkout -- &amp;lt;file&amp;gt;...&lt;/code&gt; 来撤销当前工作空间的修改。例如，我们有以下文件已经做出了修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On branch hunghudb-11.3beta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Changes not staged for commit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;backend&amp;#x2F;postmaster&amp;#x2F;pgstat.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;backend&amp;#x2F;replication&amp;#x2F;logical&amp;#x2F;reorderbuffer.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;backend&amp;#x2F;storage&amp;#x2F;file&amp;#x2F;buffile.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;include&amp;#x2F;pgstat.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;include&amp;#x2F;replication&amp;#x2F;reorderbuffer.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modified:   src&amp;#x2F;include&amp;#x2F;storage&amp;#x2F;buffile.h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果此时我想要撤销这些修改，我们应该怎么做呢？&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="git" scheme="https://blog.japinli.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>初识 git blame</title>
    <link href="https://blog.japinli.top/2019/12/git-blame/"/>
    <id>https://blog.japinli.top/2019/12/git-blame/</id>
    <published>2019-12-14T03:25:05.000Z</published>
    <updated>2020-08-23T11:19:40.486Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在向 PostgreSQL 社区提交 patch 时，发现其维护者很快就定位到了代码何时由谁更改了，作为一个萌新，我也不好意思问:(，只能自己下来查找资料，经过一番搜索，发现了 &lt;code&gt;git blame&lt;/code&gt; 这个命令。&lt;/p&gt;</summary>
    
    
    
    <category term="杂项" scheme="https://blog.japinli.top/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="git" scheme="https://blog.japinli.top/tags/git/"/>
    
  </entry>
  
</feed>
